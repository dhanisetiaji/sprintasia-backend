definitions:
  models.LoginUser:
    properties:
      email:
        maxLength: 50
        minLength: 4
        type: string
      password:
        maxLength: 50
        minLength: 8
        type: string
      platform:
        type: string
    required:
    - email
    - password
    - platform
    type: object
  models.RegisterUser:
    properties:
      email:
        maxLength: 50
        minLength: 4
        type: string
      name:
        maxLength: 50
        minLength: 4
        type: string
      password:
        maxLength: 50
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
  models.TaskList:
    properties:
      created_at:
        type: string
      created_by:
        type: integer
      description:
        type: string
      due_date:
        type: string
      id:
        type: integer
      name:
        type: string
      status:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.User'
    type: object
  models.TaskListCreate:
    properties:
      description:
        type: string
      due_date:
        type: string
      name:
        maxLength: 50
        minLength: 4
        type: string
      status:
        type: string
    required:
    - due_date
    - name
    - status
    type: object
  models.User:
    properties:
      admin:
        type: boolean
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      updated_at:
        type: string
      verified:
        type: boolean
    type: object
  viewModels.HTTPErrorResponse:
    properties:
      errors: {}
    type: object
  viewModels.HTTPSuccessResponse:
    properties:
      data: {}
    type: object
  viewModels.Login:
    properties:
      access_token:
        type: string
      access_token_exp:
        type: integer
      user: {}
    type: object
  viewModels.Message:
    properties:
      message:
        type: string
    type: object
  viewModels.Paginator:
    properties:
      limit:
        type: integer
      page:
        type: integer
      records: {}
      total_record:
        type: integer
    type: object
info:
  contact: {}
paths:
  /status/ping:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/viewModels.Message'
        "500":
          description: Internal Server Error
      tags:
      - Server
  /status/version:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/viewModels.Message'
        "500":
          description: Internal Server Error
      tags:
      - Server
  /v1/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login
        in: body
        name: reqBody
        required: true
        schema:
          $ref: '#/definitions/models.LoginUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/viewModels.HTTPSuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/viewModels.Login'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/viewModels.Message'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/viewModels.HTTPErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/viewModels.Message'
      tags:
      - Auth
  /v1/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Register
        in: body
        name: reqBody
        required: true
        schema:
          $ref: '#/definitions/models.RegisterUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/viewModels.HTTPSuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/viewModels.Message'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/viewModels.HTTPErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/viewModels.Message'
      tags:
      - Auth
  /v1/restricted/task:
    get:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/viewModels.Paginator'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.TaskList'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/viewModels.Message'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/viewModels.Message'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/viewModels.Message'
      summary: get task with pagination
      tags:
      - Task
    post:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: reqBody
        in: body
        name: reqBody
        required: true
        schema:
          $ref: '#/definitions/models.TaskListCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/viewModels.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/viewModels.Message'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/viewModels.Message'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/viewModels.Message'
      summary: create task
      tags:
      - Task
  /v1/restricted/task/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/viewModels.Message'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/viewModels.Message'
      summary: delete task
      tags:
      - Task
    get:
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/viewModels.HTTPSuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.TaskList'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/viewModels.Message'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/viewModels.Message'
      summary: get task by id
      tags:
      - Task
    put:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: reqBody
        in: body
        name: reqBody
        required: true
        schema:
          additionalProperties: true
          type: object
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/viewModels.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/viewModels.Message'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/viewModels.Message'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/viewModels.Message'
      summary: update task
      tags:
      - Task
  /v1/restricted/task/status/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: reqBody
        in: body
        name: reqBody
        required: true
        schema:
          additionalProperties: true
          type: object
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/viewModels.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/viewModels.Message'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/viewModels.Message'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/viewModels.Message'
      summary: update status task
      tags:
      - Task
  /v1/restricted/user:
    get:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/viewModels.HTTPSuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/viewModels.Message'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/viewModels.Message'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/viewModels.Message'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/viewModels.Message'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/viewModels.Message'
      summary: Get User
      tags:
      - User
  /v1/restricted/users:
    get:
      consumes:
      - application/json
      - multipart/form-data
      - application/x-www-form-urlencoded
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/viewModels.Paginator'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.User'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/viewModels.Message'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/viewModels.Message'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/viewModels.Message'
      summary: List of users
      tags:
      - User
swagger: "2.0"
